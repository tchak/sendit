// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String           @id @default(uuid()) @db.Uuid
  name       String
  createdAt  DateTime         @default(now()) @map("created_at")
  updatedAt  DateTime         @default(now()) @updatedAt @map("updated_at")
  twitterId  String?          @unique @map("twitter_id")
  githubId   String?          @unique @map("github_id")
  transports EmailTransport[]
  templates  EmailTemplate[]

  @@map("users")
}

model EmailTransport {
  id        String          @id @default(uuid()) @db.Uuid
  createdAt DateTime        @default(now()) @map("created_at")
  updatedAt DateTime        @default(now()) @updatedAt @map("updated_at")
  name      String
  email     String
  host      String
  port      Int
  username  String
  password  String
  userId    String          @map("user_id") @db.Uuid
  user      User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  templates EmailTemplate[]

  @@unique([id, userId])
  @@index(userId)
  @@map("email_transports")
}

model EmailTemplate {
  id           String          @id @default(uuid()) @db.Uuid
  createdAt    DateTime        @default(now()) @map("created_at")
  updatedAt    DateTime        @default(now()) @updatedAt @map("updated_at")
  subject      String
  body         String?
  emailColumns String[]        @map("email_columns")
  data         Json            @default("{}")
  userId       String          @map("user_id") @db.Uuid
  user         User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  transportId  String?         @map("transport_id") @db.Uuid
  transport    EmailTransport? @relation(fields: [transportId], references: [id], onDelete: SetNull)

  @@unique([id, userId])
  @@index(userId)
  @@index(transportId)
  @@map("email_templates")
}
